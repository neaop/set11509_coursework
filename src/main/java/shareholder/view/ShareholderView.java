package shareholder.view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import global.GlobalControlCodes;
import global.view.ShareTraderTable;
import global.view.View;
import global.view.ViewStrings;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;
import java.util.Observable;
import java.util.Vector;

public class ShareholderView implements View {
    private JFrame frame;
    private JButton buttonHistory;
    private JButton buttonMenu;
    private JTable table;
    private JPanel panel;

    public ShareholderView() {
        frame = new JFrame("ShareholderView");
        $$$setupUI$$$();
        frame.setContentPane(panel);
        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        frame.pack();
    }

    public void showView() {
        frame.setVisible(true);
    }

    public void closeView() {
        frame.dispose();
    }

    public void setActionListeners(ActionListener actionListener) {
        setMenuButtonListener(actionListener);
        setHistoryButtonListener(actionListener);
    }

    private void setMenuButtonListener(ActionListener actionListener) {
        System.out.println("ShareholderView: adding menu listener");
        buttonMenu.addActionListener(actionListener);
        buttonMenu.setActionCommand(GlobalControlCodes.SHAREHOLDER_CLOSE.name());
    }

    private void setHistoryButtonListener(ActionListener actionListener) {
        System.out.println("ShareholderView: adding history listener");
        buttonHistory.addActionListener(actionListener);
        buttonHistory.setActionCommand(GlobalControlCodes.SHAREHOLDER_TRADE.name());
    }

    public String getShareholderName() {
        return (String) table.getValueAt(table.getSelectedRow(), 2);
    }

    private void populateTable(Vector data) {
        Vector columnNames = ViewStrings.getShareholderColumnNames();
        ((ShareTraderTable) table).updateTable(data, columnNames);
    }

    public void update(Observable o, Object arg) {
        if (arg instanceof Vector) {
            populateTable((Vector) arg);
        }
    }

    private void createUIComponents() {
        table = new ShareTraderTable();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(2, 2, new Insets(10, 10, 10, 10), -1, -1));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        panel.add(panel1, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        buttonHistory = new JButton();
        buttonHistory.setText("OK");
        panel1.add(buttonHistory, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buttonMenu = new JButton();
        buttonMenu.setText("Menu");
        panel1.add(buttonMenu, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel.add(scrollPane1, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        scrollPane1.setViewportView(table);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
