package user.view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import user.controller.LoginController;
import user.controller.RegisterController;
import user.model.UserErrorCodes;

import javax.swing.*;
import java.awt.*;
import java.util.Observable;
import java.util.Observer;

public class UserView implements Observer {
    private JTextField fieldName;
    private JPasswordField fieldPassword;
    private JButton buttonLogin;
    private JLabel labelName;
    private JLabel labelPassword;
    private JPanel panel;
    private JButton buttonRegister;
    private JPanel panelButton;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    public UserView() {
        JFrame frame = new JFrame("UserView");
        frame.setContentPane(panel);
        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    public void setLoginControl(LoginController loginControl) {
        System.out.println("UserView: Adding LoginController");
        loginControl = loginControl;
        buttonLogin.addActionListener(loginControl);
    }

    public void setRegisterController(RegisterController registerController) {
        System.out.println("UserView: Adding RegisterController");
        buttonRegister.addActionListener(registerController);

    }

    public String getUserPassword() {
        return String.valueOf(fieldPassword.getPassword());
    }

    public String getUserName() {
        return fieldName.getText();
    }

    @Override
    public void update(Observable o, Object arg) {
        System.out.println("View: " + arg);
        switch ((UserErrorCodes) arg) {
            case NO_SUCH_USER:
                showInvalidLogin();
                break;
            case INVALID_CREDENTIAL:
                showInvalidCredential();
                break;
            case USER_EXISTS:
                showInvalidRegister();
                break;
            case REGISTERED:
                showValidRegister();
                break;
            case LOG_IN:
                break;
            case FAILED:
                break;
        }
    }

    private void showedFailedMessageDialog(String message) {
        JOptionPane.showMessageDialog(null
                , message, "Log In"
                , JOptionPane.ERROR_MESSAGE);
    }

    private void showInvalidLogin() {
        showedFailedMessageDialog("No such User/Password");
    }

    private void showInvalidCredential() {
        showedFailedMessageDialog("Invalid credentials");
    }

    private void showInvalidRegister() {
        showedFailedMessageDialog("Username already registered");
    }

    private void showValidRegister() {
        showedFailedMessageDialog("New user Registered");
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridBagLayout());
        labelName = new JLabel();
        labelName.setText("User Name");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 2;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panel.add(labelName, gbc);
        fieldName = new JTextField();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel.add(fieldName, gbc);
        labelPassword = new JLabel();
        labelPassword.setText("Password");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        panel.add(labelPassword, gbc);
        fieldPassword = new JPasswordField();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel.add(fieldPassword, gbc);
        panelButton = new JPanel();
        panelButton.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel.add(panelButton, gbc);
        buttonLogin = new JButton();
        buttonLogin.setText("Log In");
        panelButton.add(buttonLogin, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buttonRegister = new JButton();
        buttonRegister.setText("Register");
        panelButton.add(buttonRegister, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
