package share.view;

import global.controller.GlobalControlCodes;
import global.view.ShareTraderTable;
import global.view.View;

import javax.swing.*;
import javax.swing.table.TableModel;
import java.awt.*;
import java.awt.event.ActionListener;
import java.util.Arrays;
import java.util.Observable;
import java.util.Observer;
import java.util.Vector;

public class ShareView extends Observable implements Observer, View {
    private JFrame frame;
    private JPanel panel;
    private JTable table;
    private JPanel panelTable;
    private JButton buttonRegister;
    private JButton buttonMenu;
    private JPanel panelButton;
    private JScrollPane panelScroll;
    private TableModel tableModel;

    private String[] columnNames = {
            "Share ID",
            "Trade Code",
            "Company Name",
            "Share Price",
            "Share Value",
            "Share Quantity"};


    public ShareView() {
        frame = new JFrame("ShareView");
        $$$setupUI$$$();
        frame.setContentPane(panel);
        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        frame.pack();
    }

    public void showView() {
        frame.setVisible(true);
    }

    public void closeView() {
        frame.dispose();
    }

    private void populateTable(Vector data, Vector columnNames) {

        ((ShareTraderTable) table).updateTable(data, columnNames);

//        tableModel = new ShareTraderTable.ShareTraderTableModel(data
//                , new Vector<>(Arrays.asList(columnNames)));
//        table.setModel(tableModel);
//        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
//        table.setRowSelectionInterval(0, 0);
    }

    public void setActionListeners(ActionListener actionListener) {
        setRegisterButtonListener(actionListener);
        setMenuButtonListener(actionListener);
    }

    private void setRegisterButtonListener(ActionListener actionListener) {
        System.out.println("ShareView: adding register listener");
        buttonRegister.addActionListener(actionListener);
        buttonRegister.setActionCommand(GlobalControlCodes.TRACK_OPEN.name());
    }

    private void setMenuButtonListener(ActionListener actionListener) {
        System.out.println("ShareView: adding menu listener");
        buttonMenu.addActionListener(actionListener);
        buttonMenu.setActionCommand(GlobalControlCodes.SHARE_CLOSE.name());
    }

    public int getSelectedShareId() {
        int selectedRow;
        selectedRow = table.getSelectedRow();
        if (selectedRow == -1) {
            selectedRow = 0;
        }
        return (int) table.getValueAt(selectedRow, 0);
    }

    public Vector getSelectedShare() {
        Vector<Vector<Object>> selectedShare = new Vector<>();

        if (table.getSelectedRow() != -1) {
            Vector<Object> selectedRow = new Vector<>();

            for (int i = 0; i < table.getColumnCount(); i++) {
                selectedRow.add(table.getValueAt(table.getSelectedRow(), i));
            }
            selectedShare.add(selectedRow);
        }
        return selectedShare;
    }

    public void update(Observable o, Object arg) {
        if (arg instanceof Vector) {
            Vector columns;
            columns = new Vector<>(Arrays.asList(columnNames));
            populateTable((Vector) arg, columns);
        }
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        table = new ShareTraderTable();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel = new JPanel();
        panel.setLayout(new BorderLayout(0, 0));
        panelTable = new JPanel();
        panelTable.setLayout(new BorderLayout(0, 0));
        panel.add(panelTable, BorderLayout.CENTER);
        panelScroll = new JScrollPane();
        panelScroll.setHorizontalScrollBarPolicy(31);
        panelScroll.setVerticalScrollBarPolicy(22);
        panelTable.add(panelScroll, BorderLayout.CENTER);
        table.setPreferredScrollableViewportSize(new Dimension(1000, 250));
        table.setRowSelectionAllowed(true);
        table.setShowVerticalLines(true);
        panelScroll.setViewportView(table);
        panelButton = new JPanel();
        panelButton.setLayout(new GridBagLayout());
        panel.add(panelButton, BorderLayout.SOUTH);
        buttonRegister = new JButton();
        buttonRegister.setText("Track Share");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelButton.add(buttonRegister, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelButton.add(spacer1, gbc);
        buttonMenu = new JButton();
        buttonMenu.setText("Main Menu");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panelButton.add(buttonMenu, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
